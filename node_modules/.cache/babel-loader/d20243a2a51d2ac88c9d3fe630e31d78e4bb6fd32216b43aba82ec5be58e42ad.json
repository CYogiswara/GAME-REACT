{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\GAME-REACT\\\\src\\\\components\\\\DisplayDate.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayDate = ({\n  hours,\n  minutes,\n  day,\n  weekDay\n}) => {\n  _s();\n  const formatTime = `${String(hours).padStart(2, \"0\")}:${String(minutes).padStart(2, \"0\")}`;\n  const greeting = getGreeting(hours);\n  const playerName = localStorage.getItem(\"playerName\") || \"Player\";\n  function getGreeting(hour) {\n    if (hour >= 3 && hour < 11) return \"Good Morning\";\n    if (hour >= 11 && hour < 15) return \"Good Afternoon\";\n    if (hour >= 15 && hour < 19) return \"Good Evening\";\n    return \"Good Night\";\n  }\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setMinutes(prev => {\n        let newMinutes = prev + 1;\n        let newHours = hours;\n        let newDay = day;\n        let newWeekDay = weekDay;\n        if (newMinutes >= 60) {\n          newMinutes = 0;\n          newHours = hours + 1;\n          if (newHours >= 24) {\n            newHours = 0;\n            newDay = day + 1;\n            // Update weekDay\n            const daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n            let weekDayIndex = daysOfWeek.indexOf(weekDay);\n            weekDayIndex = (weekDayIndex + 1) % 7;\n            newWeekDay = daysOfWeek[weekDayIndex];\n            setDay(newDay);\n            setWeekDay(newWeekDay);\n            localStorage.setItem(\"day\", newDay);\n            localStorage.setItem(\"weekDay\", newWeekDay);\n          }\n          setHours(newHours);\n          localStorage.setItem(\"hours\", newHours);\n        }\n        localStorage.setItem(\"minutes\", newMinutes);\n        return newMinutes;\n      });\n    }, 1000); // 1 detik = 1 menit game\n    return () => clearInterval(timer);\n  }, [hours, day, weekDay]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date\",\n      children: [\"Day \", day, \" - \", weekDay, \" | \", formatTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-name\",\n      children: [greeting, \", \", playerName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(DisplayDate, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = DisplayDate;\nexport default DisplayDate;\nvar _c;\n$RefreshReg$(_c, \"DisplayDate\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DisplayDate","hours","minutes","day","weekDay","_s","formatTime","String","padStart","greeting","getGreeting","playerName","localStorage","getItem","hour","useEffect","timer","setInterval","setMinutes","prev","newMinutes","newHours","newDay","newWeekDay","daysOfWeek","weekDayIndex","indexOf","setDay","setWeekDay","setItem","setHours","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/GAME-REACT/src/components/DisplayDate.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst DisplayDate = ({ hours, minutes, day, weekDay }) => {\r\n  const formatTime = `${String(hours).padStart(2, \"0\")}:${String(minutes).padStart(2, \"0\")}`;\r\n  const greeting = getGreeting(hours);\r\n  const playerName = localStorage.getItem(\"playerName\") || \"Player\";\r\n\r\n  function getGreeting(hour) {\r\n    if (hour >= 3 && hour < 11) return \"Good Morning\";\r\n    if (hour >= 11 && hour < 15) return \"Good Afternoon\";\r\n    if (hour >= 15 && hour < 19) return \"Good Evening\";\r\n    return \"Good Night\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n        setMinutes(prev => {\r\n            let newMinutes = prev + 1;\r\n            let newHours = hours;\r\n            let newDay = day;\r\n            let newWeekDay = weekDay;\r\n            if (newMinutes >= 60) {\r\n                newMinutes = 0;\r\n                newHours = hours + 1;\r\n                if (newHours >= 24) {\r\n                    newHours = 0;\r\n                    newDay = day + 1;\r\n                    // Update weekDay\r\n                    const daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\r\n                    let weekDayIndex = daysOfWeek.indexOf(weekDay);\r\n                    weekDayIndex = (weekDayIndex + 1) % 7;\r\n                    newWeekDay = daysOfWeek[weekDayIndex];\r\n                    setDay(newDay);\r\n                    setWeekDay(newWeekDay);\r\n                    localStorage.setItem(\"day\", newDay);\r\n                    localStorage.setItem(\"weekDay\", newWeekDay);\r\n                }\r\n                setHours(newHours);\r\n                localStorage.setItem(\"hours\", newHours);\r\n            }\r\n            localStorage.setItem(\"minutes\", newMinutes);\r\n            return newMinutes;\r\n        });\r\n    }, 1000); // 1 detik = 1 menit game\r\n    return () => clearInterval(timer);\r\n}, [hours, day, weekDay]);\r\n  return (\r\n    <div>\r\n      <div className=\"date\">Day {day} - {weekDay} | {formatTime}</div>\r\n      <div className=\"character-name\">{greeting}, {playerName}!</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayDate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}