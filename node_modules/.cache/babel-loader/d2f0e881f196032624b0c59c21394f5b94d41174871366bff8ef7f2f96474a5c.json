{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\GAME-REACT\\\\src\\\\components\\\\DisplayDate.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\nconst DisplayDate = ({\n  hours: initialHours,\n  minutes: initialMinutes,\n  day: initialDay,\n  weekDay: initialWeekDay\n}) => {\n  _s();\n  const [hours, setHours] = useState(initialHours || 6);\n  const [minutes, setMinutes] = useState(initialMinutes || 0);\n  const [day, setDay] = useState(initialDay || 1);\n  const [weekDay, setWeekDay] = useState(initialWeekDay || \"Monday\");\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setMinutes(prev => {\n        let newMinutes = prev + 1;\n        let newHours = hours;\n        let newDay = day;\n        let newWeekDay = weekDay;\n        if (newMinutes >= 60) {\n          newMinutes = 0;\n          newHours = hours + 1;\n          if (newHours >= 24) {\n            newHours = 0;\n            newDay = day + 1;\n            // Update weekDay\n            let weekDayIndex = daysOfWeek.indexOf(weekDay);\n            weekDayIndex = (weekDayIndex + 1) % 7;\n            newWeekDay = daysOfWeek[weekDayIndex];\n            setDay(newDay);\n            setWeekDay(newWeekDay);\n          }\n          setHours(newHours);\n        }\n        return newMinutes;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [hours, day, weekDay]);\n  const formatTime = `${String(hours).padStart(2, \"0\")}:${String(minutes).padStart(2, \"0\")}`;\n  const greeting = getGreeting(hours);\n  const playerName = localStorage.getItem(\"playerName\") || \"Player\";\n  function getGreeting(hour) {\n    if (hour >= 3 && hour < 11) return \"Good Morning\";\n    if (hour >= 11 && hour < 15) return \"Good Afternoon\";\n    if (hour >= 15 && hour < 19) return \"Good Evening\";\n    return \"Good Night\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date\",\n      children: [\"Day \", day, \" - \", weekDay, \" | \", formatTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-name\",\n      children: [greeting, \", \", playerName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(DisplayDate, \"UJ7uiyWR+I8j8F//Jo9Nfm+OjZY=\");\n_c = DisplayDate;\nexport default DisplayDate;\nvar _c;\n$RefreshReg$(_c, \"DisplayDate\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","daysOfWeek","DisplayDate","hours","initialHours","minutes","initialMinutes","day","initialDay","weekDay","initialWeekDay","_s","setHours","setMinutes","setDay","setWeekDay","timer","setInterval","prev","newMinutes","newHours","newDay","newWeekDay","weekDayIndex","indexOf","clearInterval","formatTime","String","padStart","greeting","getGreeting","playerName","localStorage","getItem","hour","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/GAME-REACT/src/components/DisplayDate.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\r\n\r\nconst DisplayDate = ({ hours: initialHours, minutes: initialMinutes, day: initialDay, weekDay: initialWeekDay }) => {\r\n  const [hours, setHours] = useState(initialHours || 6);\r\n  const [minutes, setMinutes] = useState(initialMinutes || 0);\r\n  const [day, setDay] = useState(initialDay || 1);\r\n  const [weekDay, setWeekDay] = useState(initialWeekDay || \"Monday\");\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setMinutes(prev => {\r\n        let newMinutes = prev + 1;\r\n        let newHours = hours;\r\n        let newDay = day;\r\n        let newWeekDay = weekDay;\r\n        if (newMinutes >= 60) {\r\n          newMinutes = 0;\r\n          newHours = hours + 1;\r\n          if (newHours >= 24) {\r\n            newHours = 0;\r\n            newDay = day + 1;\r\n            // Update weekDay\r\n            let weekDayIndex = daysOfWeek.indexOf(weekDay);\r\n            weekDayIndex = (weekDayIndex + 1) % 7;\r\n            newWeekDay = daysOfWeek[weekDayIndex];\r\n            setDay(newDay);\r\n            setWeekDay(newWeekDay);\r\n          }\r\n          setHours(newHours);\r\n        }\r\n        return newMinutes;\r\n      });\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [hours, day, weekDay]);\r\n\r\n  const formatTime = `${String(hours).padStart(2, \"0\")}:${String(minutes).padStart(2, \"0\")}`;\r\n  const greeting = getGreeting(hours);\r\n  const playerName = localStorage.getItem(\"playerName\") || \"Player\";\r\n\r\n  function getGreeting(hour) {\r\n    if (hour >= 3 && hour < 11) return \"Good Morning\";\r\n    if (hour >= 11 && hour < 15) return \"Good Afternoon\";\r\n    if (hour >= 15 && hour < 19) return \"Good Evening\";\r\n    return \"Good Night\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"date\">Day {day} - {weekDay} | {formatTime}</div>\r\n      <div className=\"character-name\">{greeting}, {playerName}!</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayDate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}